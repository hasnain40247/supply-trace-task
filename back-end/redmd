# Supply Trace Task

This is a Flask-based API application that provides endpoints for fetching company details and their locations. The application uses pandas for data manipulation and flasgger for API documentation.


## Setup Instructions
### Prerequisites

- Python 3.x
- Flask
- pandas
- flasgger
### Installation
Clone the repository:

bash
Copy code
git clone <repository_url>
cd <repository_directory>
Create a virtual environment and activate it:

bash
Copy code
python -m venv venv
source venv/bin/activate   # On Windows, use `venv\Scripts\activate`
Install the required packages:

bash
Copy code
pip install -r requirements.txt
Place the companies.csv and locations.csv files in the ./assets/ directory.

Running the Application
Run the Flask application:

bash
Copy code
flask run
Access the API documentation at http://localhost:5000/apidocs/.

API Endpoints
Fetch All Companies
URL: /api/companies
Method: GET
Description: Fetches all companies within a file.
Responses
200 OK: Returns a list of companies.
500 Internal Server Error: If there's an issue with the server.
Fetch a Single Company by ID
URL: /api/companies/<int:company_id>
Method: GET
Description: Fetch a single company's details by ID.
Parameters
company_id (int): The ID of the required company.
Responses
200 OK: Returns the details of the company.
404 Not Found: If the company is not found.
500 Internal Server Error: If there's an issue with the server.
Fetch All Locations for a Specific Company
URL: /api/companies/<int:company_id>/locations
Method: GET
Description: Fetch all possible locations for a specific company.
Parameters
company_id (int): The ID of the company.
Responses
200 OK: Returns a list of locations for the company.
404 Not Found: If no locations are found for the company.
500 Internal Server Error: If there's an issue with the server.
Error Handling
The application has custom error handlers for 404 Not Found and 500 Internal Server Error. Each handler logs the error and returns a JSON response with an error message.

404 Not Found
Description: Triggered when a requested resource is not found.
Response: Returns a JSON response with an error message.
500 Internal Server Error
Description: Triggered when there's an internal server error.
Response: Returns a JSON response with an error message.
Logging
The application uses Python's logging module to log information and errors. Logs are saved to record.log.

License
This project is licensed under the MIT License.

Acknowledgements
Flask: A lightweight WSGI web application framework.
pandas: A powerful data manipulation library.
flasgger: A Flask extension for Swagger API documentation.
Feel free to contribute to the project by creating pull requests or raising issues. For any questions, please contact [your_email@example.com].